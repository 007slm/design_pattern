package flyweight;

/**
 * 享元模式：采用一个共享类来避免大量拥有相同内容的“小类”的开销。享元模式中区分了内蕴状态和外蕴状态。内蕴状态就是共性，外蕴状态就是个性了。
 * 内蕴状态存储在享元内部，不会随环境的改变而有所不同，是可以共享的；外蕴状态是 不可以共享的，它随环境的改变而改变的，因此外蕴状态是由客户端来保持
 * 享元模式分为：单纯享元模式和复合享元模式。<br>
 * 单纯享元模式的结构组成：抽象享元角色；具体享元角色；享元工厂角色；客户端角色。
 * 复合享元模式的结构组成：抽象享元角色；具体享元角色；复合享元角色；享元工厂角色；客户端角色。<br>
 * 优点：它能够大幅度的降低内存中对象的数量<br>
 * 缺点：使得系统逻辑复杂化，而且在一定程度上外蕴状态影响了系统的速度。
 * 
 * @author yanbin
 * 
 */
public class FlyweightPattern {

}
